#!/bin/env sh

# INIT
printf "$$" > ~/.cache/pidofbar
sec=0

update_memory () { 
	memory="$(free -h | sed -n "2s/\([^ ]* *\)\{2\}\([^ ]*\).*/\2/p")"
}

update_time () { 
	time="$(date "+[ ÔÅ≥ %a %d %b ] [ ÔÄó %I:%M %P ]")" 
}

update_bat () { 
	# you might need to change the path depending on your device
	read -r bat_status </sys/class/power_supply/BAT1/status
	read -r bat_capacity </sys/class/power_supply/BAT1/capacity
	if [ "$bat_status" = "Charging" ]; then
		bat_status="Ôóß"
	elif [ "$bat_capacity" -gt 80 ]; then
		bat_status="ÔâÄ"
	elif [ "$bat_capacity" -gt 60 ]; then
		bat_status="ÔâÅ"
	elif [ "$bat_capacity" -gt 40 ]; then
		bat_status="ÔâÇ"
	elif [ "$bat_capacity" -gt 20 ]; then
		bat_status="ÔâÉ"
	else 
		bat_status="ÔâÑ"
	fi
	bat="$bat_status $bat_capacity%"
}

update_vol () { 
	vol="$([ "$(pamixer --get-mute)" = "false" ] && printf 'ÔÄ® ' || printf 'Ôö© ')$(pamixer --get-volume)%"
}

# We have to run this only once.
update_vol

update_internet () {
	if grep -xq 'up' /sys/class/net/w*/operstate 2>/dev/null ; then
		wifiicon="$(awk '/^\s*w/ { print "üì∂", int($3 * 100 / 70) "% " }' /proc/net/wireless)"
	elif grep -xq 'down' /sys/class/net/w*/operstate 2>/dev/null ; then
		grep -xq '0x1003' /sys/class/net/w*/flags && wifiicon="üì° " || wifiicon="‚ùå "
	fi
	
	internet="$(sed "s/down/‚ùé/;s/up/üåê/" /sys/class/net/e*/operstate 2>/dev/null)"
	vpn="$(sed "s/.*/üîí/" /sys/class/net/tun*/operstate 2>/dev/null)"
	internet_status="$wifiicon$internet$vpn"
}

update_internet


display () { 
  xsetroot -name "[ Ôãõ $memory ] [$internet_status] [ $vol ] $time [ $bat ]"
}

# Handling receiving signal
# RTMIN = 34 (always)
trap	"update_vol;display"	"RTMIN"
trap	"update_internet;display" 	"RTMIN+3"


## kill -m "$(cat ~/.cache/pidofbar)"
# where m = 34 + n

while true
do
	sleep 1 &
  wait && { 
		# to update item ever n seconds with a offset of m
		## [ $((sec % n)) -eq m ] && udpate_item
		[ $((sec % 5 )) -eq 0 ] && update_time
		[ $((sec % 5 )) -eq 0 ] && update_bat
		[ $((sec % 5 )) -eq 0 ] && update_internet
		[ $((sec % 15)) -eq 0 ] && update_memory

		# how often the display updates ( 5 seconds )
		[ $((sec % 5 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done 
